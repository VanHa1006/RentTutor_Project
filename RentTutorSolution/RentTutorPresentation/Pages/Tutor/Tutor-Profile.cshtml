@page
@model RentTutorPresentation.Pages.Tutor.Tutor_ProfileModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up Page</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Change status button color
            const statusButtons = document.querySelectorAll(".statusButton");
            statusButtons.forEach(function (statusButton) {
                var statusText = statusButton.textContent.trim();
                if (statusText === "Active") {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100";
                } else {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-red-700 bg-red-100 rounded-full dark:bg-red-700 dark:text-red-100";
                }
            });
        });
    </script>
    <style>
        body {
            font-family: 'Plus Jakarta Sans', sans-serif;
        }

        .avatar-container {
            position: relative;
            width: 160px;
            height: 160px;
        }

        .upload-icon {
            transition: opacity 0.3s ease-in-out;
        }

        .avatar-container:hover .upload-icon {
            display: flex;
        }

        #avatar-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

    </style>
</head>
<body>
    <div class="bg-white w-full flex flex-col gap-5 px-3 md:px-16 lg:px-28 md:flex-row text-[#161931]">
        <aside class="hidden py-4 md:w-1/3 lg:w-1/4 md:block">
            <div class="sticky flex flex-col gap-2 p-4 text-sm border-r border-indigo-100 top-12">
                <h2 class="pl-3 mb-4 text-2xl font-semibold">Settings</h2>

                <a href="/Tutor/Tutor-Profile" class="flex items-center px-3 py-2.5 font-bold bg-white text-indigo-900 border rounded-full">
                    Public Profile
                </a>
                <a href="/Tutor/Courses-manage" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Courses Manage
                </a>
                <a href="/Tutor/Orders-manage" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Orders Manage
                </a>
                <a href="/Tutor/Student-resquest" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Student Resquest
                </a>
            </div>
        </aside>
        <main class="w-full min-h-screen py-1 md:w-2/3 lg:w-3/4">
            <div class="p-2 md:p-4">
                <div class="w-full px-6 pb-8 mt-8 sm:max-w-xl sm:rounded-lg">
                    <h2 class="pl-6 text-2xl font-bold sm:text-xl">Public Profile</h2>
                    @if (Model.Student != null)
                    {
                        <form method="post">
                            <input type="hidden" asp-for="Student.UserId" />
                            <input type="hidden" asp-for="Student.PasswordHash" />
                            <input type="hidden" asp-for="Student.CreatedAt" />
                            <input type="hidden" asp-for="Student.Status" />
                            <input type="hidden" asp-for="Student.Role" />
                            <div class="grid max-w-2xl mx-auto mt-8">
                                <div class="flex flex-col items-center space-y-5 sm:flex-row sm:space-y-0 relative">
                                    <div class="avatar-container relative">
                                        <img id="avatar-image" class="object-cover w-40 h-40 p-1 rounded-full ring-2 ring-indigo-300 dark:ring-indigo-500"
                                             src="/img/Avatar01.jpg"
                                             alt="Bordered avatar">
                                        <label for="avatar-upload" class="upload-icon absolute inset-0 flex items-center justify-center bg-indigo-500 bg-opacity-50 rounded-full cursor-pointer hidden">
                                            <img src="https://www.svgrepo.com/show/485545/upload-cicle.svg" alt="Upload Icon" class="w-10 h-10">
                                        </label>
                                        <input type="file" id="avatar-upload" class="hidden" accept="image/*">
                                    </div>

                                    <div class="flex flex-col space-y-2 sm:ml-8">
                                        <label asp-for="Student.Username" for="username" class="block mb-2 text-sm font-medium text-indigo-900 dark:text-white">Username</label>
                                        <input asp-for="Student.Username" type="text" id="username"
                                               class="bg-indigo-50 border border-indigo-300 text-indigo-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5"
                                               readonly>
                                        <span asp-validation-for="Student.Username" class="text-danger"></span>


                                        <label asp-for="Student.Email" for="email" class="block mb-2 text-sm font-medium text-indigo-900 dark:text-white">Email</label>
                                        <input asp-for="Student.Email" type="email" id="email"
                                               class="bg-indigo-50 border border-indigo-300 text-indigo-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5"
                                               readonly>
                                        <span asp-validation-for="Student.Email" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-2 sm:mb-6">
                                <label asp-for="Student.FullName" for="fullname" class="block mb-2 text-sm font-medium text-indigo-900 dark:text-white">Full Name</label>
                                <input asp-for="Student.FullName" type="text" id="fullname"
                                       class="bg-indigo-50 border border-indigo-300 text-indigo-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5"
                                       readonly>
                                <span asp-validation-for="Student.FullName" class="text-danger"></span>
                            </div>

                            <div class="mb-2 sm:mb-6">
                                <label asp-for="Student.Phone" for="phone" class="block mb-2 text-sm font-medium text-indigo-900 dark:text-white">Phone</label>
                                <input asp-for="Student.Phone" type="tel" id="phone"
                                       class="bg-indigo-50 border border-indigo-300 text-indigo-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5"
                                       readonly>
                            </div>

                            <div class="mb-2 sm:mb-6">
                                <label asp-for="Student.Address" for="address" class="block mb-2 text-sm font-medium text-indigo-900 dark:text-white">Address</label>
                                <input asp-for="Student.Address" type="text" id="address"
                                       class="bg-indigo-50 border border-indigo-300 text-indigo-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5"
                                       readonly>
                            </div>

                            <div class="mb-2 sm:mb-6">
                                <label asp-for="Student.Birthday" for="birthday" class="block mb-2 text-sm font-medium text-indigo-900 dark:text-white">Birthday</label>
                                <input asp-for="Student.Birthday" type="date" id="birthday"
                                       class="bg-indigo-50 border border-indigo-300 text-indigo-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5"
                                       readonly>
                            </div>

                            <div id="notification" class="hidden p-4 mb-4 text-sm rounded-lg" role="alert"></div>

                            <div class="flex justify-end space-x-2">
                                <button type="button" id="editButton"
                                        class="text-indigo-700 bg-white hover:bg-indigo-100 focus:ring-4 focus:outline-none focus:ring-indigo-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-indigo-600 dark:hover:bg-indigo-700 dark:focus:ring-indigo-800">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M17.414 2.586a2 2 0 00-2.828 0l-10 10A2 2 0 004 14v2a2 2 0 002 2h2a2 2 0 001.414-.586l10-10a2 2 0 000-2.828l-2-2zM7.121 14H6v-1.121l8.293-8.293 1.121 1.121L7.121 14zM5 15v-1.121l1.293 1.293H5zm11.293-9.707L14.172 4l1.121 1.121 1.293-1.293-1.293-1.293z" />
                                    </svg>
                                </button>
                                <button type="submit" id="updateButton" disabled
                                        class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-indigo-600 dark:hover:bg-indigo-700 dark:focus:ring-indigo-800">
                                    Update
                                </button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div>
                            <p>Customer information is not available.</p>
                        </div>
                    }
                </div>
            </div>
    </div>
    </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const editButton = document.getElementById('editButton');
            const saveButton = document.getElementById('updateButton');
            const inputs = document.querySelectorAll('input');
            const notification = document.getElementById('notification');

            editButton.addEventListener('click', function () {
                inputs.forEach(function (input) {
                    input.removeAttribute('readonly');
                });
                saveButton.disabled = false;
                editButton.disabled = true;
            });

            saveButton.addEventListener('click', function () {
                // Simulate update success or failure
                const isSuccess = true; // Replace with actual logic

                if (isSuccess) {
                    notification.textContent = "Update Successfully";
                    notification.className = "bg-green-100 text-green-700 p-4 mb-4 text-sm rounded-lg";
                } else {
                    notification.textContent = "Fail, try again";
                    notification.className = "bg-red-100 text-red-700 p-4 mb-4 text-sm rounded-lg";
                }
                notification.classList.remove("hidden");
                setTimeout(() => {
                    notification.classList.add("hidden");
                }, 3000);
            });
        });

        document.getElementById('avatar-upload').addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('avatar-image').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

    </script>
</body>
</html>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
