@page
@model RentTutorPresentation.Pages.Tutor.Orders_manageModel
@{
    var userId = HttpContext.Session.GetString("TutorId");
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders management</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script defer>
        document.addEventListener('DOMContentLoaded', function () {


            // Change status button color
            const statusButtons = document.querySelectorAll(".statusButton");
            statusButtons.forEach(function (statusButton) {
                var statusText = statusButton.textContent.trim().toLowerCase(); // Trim and convert to lowercase
                if (statusText === "studying") {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100";
                } else if (statusText === "disapprove") {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-red-700 bg-red-100 rounded-full dark:bg-red-700 dark:text-red-100";
                } else if (statusText === "pending") {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-gray-700 bg-gray-100 rounded-full dark:bg-gray-700 dark:text-gray-100";
                } else {

                    // Default styling for other statuses
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-indigo-700 bg-indigo-100 rounded-full dark:bg-indigo-700 dark:text-indigo-100";
                }
            });
        });
    </script>
    <style>
        body {
            font-family: 'Plus Jakarta Sans', sans-serif;
        }

    </style>
</head>
<body>
    <div class="bg-white w-full flex flex-col gap-5 px-3 md:px-16 lg:px-28 md:flex-row text-[#161931]">
        <aside class="hidden py-4 md:w-1/3 lg:w-1/4 md:block">
            <div class="sticky flex flex-col gap-2 p-4 text-sm border-r border-indigo-100 top-12">
                <h2 class="pl-3 mb-4 text-2xl font-semibold">Settings</h2>

                <a href="/Tutor/Tutor-Profile" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Public Profile
                </a>
                <a href="/Tutor/Courses-manage" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Courses Manage
                </a>
                <a href="/Tutor/Orders-manage" class="flex items-center px-3 py-2.5 font-bold bg-white text-indigo-900 border rounded-full">
                    Orders Manage
                </a>
                <a href="/Tutor/Student-resquest" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Student Resquest
                </a>
            </div>
        </aside>

        @*  -------------------------------------------Main------------------------------------------------ *@

        <main class="w-full min-h-screen py-1 md:w-2/3 lg:w-3/4">
            <div class="p-2 md:p-4">
                <div class="w-full px-6 pb-8 mt-8 sm:max-w-full sm:rounded-lg bg-white shadow-md">
                    <div class="flex justify-between items-center">
                        <h2 class="text-2xl font-bold">Courses Manage</h2>
                        <div class="flex space-x-4">
                        </div>
                    </div>

                    @if (Model.OrderDetail?.Items != null && Model.OrderDetail.Items.Any())
                    {
                    <table class="min-w-full bg-white border border-gray-200 mt-4">
                        <thead>
                            <tr class="border-b border-gray-200">
                                <th class="px-4 py-2 w-1/12">
                                    <input type="checkbox" id="checkAll" class="form-checkbox">
                                </th>
                                <th class="px-4 py-2 w-1/12">Num</th>
                                <th class="px-4 py-2 w-3/12">FullName</th>
                                <th class="px-4 py-2 w-2/12">OrderID</th>
                                <th class="px-4 py-2 w-2/12">Status</th>
                                <th class="px-4 py-2 w-2/12">CourseName</th>
                                <th class="px-4 py-2 w-2/12">Price</th>
                                <th class="px-4 py-2 w-2/12">Action</th>
                            </tr>
                        </thead>
                        
                        <tbody id="courseTable">
                            @{
                                int counter = 1;
                            }
                            @foreach (var item in Model.OrderDetail.Items)
                            {
                                <tr class="text-center border-b border-gray-200">
                                    <td class="px-4 py-2">
                                        <input type="checkbox" class="form-checkbox checkItem">
                                    </td>
                                    <td class="px-4 py-2">@counter</td>
                                        <td class="px-4 py-2">@item.Order.Student.StudentNavigation.FullName</td>
                                    <td class="px-4 py-2">@item.OrderId </td>
                                    <td class="px-4 py-2">
                                            <p class="statusButton toggle-active px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">@item.Status</p>
                                    </td>

                                    <td class="px-4 py-2">
                                        @* @{
                                            var displayName = item.CourseName.Length > 25
                                            ? item.CourseName.Substring(0, 25) + "..."
                                            : item.CourseName;
                                        } *@
                                            @* @displayName *@ @item.Course.CourseName
                                        <td class="px-4 py-2"> @(item.Course.Price - item.Course.DiscountPrice)</td>
                                    <td class="px-4 py-2 flex justify-center space-x-2">
                                        <a asp-page="./Detail-Course" >
                                            <button class="flex items-center px-2 py-1 text-blue-500 hover:text-blue-700">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12m-3 0a3 3 0 106 0 3 3 0 00-6 0zm-2 0a5 5 0 1110 0 5 5 0 01-10 0z" />
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                                </svg>
                                            </button>
                                        </a>
                                    <a hrf="./Delete-Course" class="text-red-600 hover:text-red-800" onclick="return confirm('Are you sure you want to delete this course?')">
                                        <button class="flex items-center px-2 py-1">
                                            <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1  
                                                1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                            </svg>
                                        </button>

                                    </a>
                                    </td>
                                </tr>
                                counter++;
                                }
                            
                        </tbody>
                    </table>
                        }
                        else
                        {
                        <div>No orders available.</div>
                        }
                </div>
            </div>
        </main>
    </div>


</body>
</html>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
