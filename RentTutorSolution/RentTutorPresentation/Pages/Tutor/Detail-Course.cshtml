@page
@model RentTutorPresentation.Pages.Tutor.Detail_CourseModel
@{

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Courses management</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Change status button color
            const statusButtons = document.querySelectorAll(".statusButton");
            statusButtons.forEach(function (statusButton) {
                var statusText = statusButton.textContent.trim();
                if (statusText === "Active") {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100";
                } else {
                    statusButton.className = "statusButton toggle-active px-2 py-1 font-semibold leading-tight text-red-700 bg-red-100 rounded-full dark:bg-red-700 dark:text-red-100";
                }
            });
        });
    </script>
    <style>
        body {
            font-family: 'Plus Jakarta Sans', sans-serif;
        }

        .avatar-container {
            position: relative;
            width: 160px;
            height: 160px;
        }

        .upload-icon {
            transition: opacity 0.3s ease-in-out;
        }

        .avatar-container:hover .upload-icon {
            display: flex;
        }

        #avatar-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

    </style>
</head>
<body>
    <div class="bg-white w-full flex flex-col gap-5 px-3 md:px-16 lg:px-28 md:flex-row text-[#161931]">
        <aside class="hidden py-4 md:w-1/3 lg:w-1/4 md:block">
            <div class="sticky flex flex-col gap-2 p-4 text-sm border-r border-indigo-100 top-12">
                <h2 class="pl-3 mb-4 text-2xl font-semibold">Settings</h2>

                <a href="/Tutor/Tutor-Profile" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Public Profile
                </a>
                <a href="/Tutor/Courses-manage" class="flex items-center px-3 py-2.5 font-bold bg-white text-indigo-900 border rounded-full">
                    Courses Manage
                </a>
                <a href="/Tutor/Orders-manage" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Orders Manage
                </a>
                <a href="/Tutor/Student-resquest" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Student Resquest
                </a>
            </div>
        </aside>

        @*  -------------------------------------------Main------------------------------------------------ *@
        <main class="w-full min-h-screen py-1 md:w-2/3 lg:w-3/4 flex items-center justify-center">
            
            <div class="p-2 md:p-4 w-full max-w-3xl bg-white border border-gray-200 rounded-lg">

                    <h2 class="text-2xl font-bold sm:text-xl mb-6 text-center">Course Details</h2>

                <form method="post" id="courseForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Course.CourseId" />
                    <input type="hidden" asp-for="Course.CreatedAt" />
                    <input type="hidden" asp-for="Course.CategoryId" />
                    <input type="hidden" asp-for="Course.Status" />
                    <div class="mb-4">
                        <label asp-for="Course.Image" class="block text-gray-700 font-medium mb-2">Course Image</label>
                        <input asp-for="Course.Image" type="text" class="w-full px-4 py-2 border rounded-lg" readonly>
                        <span asp-validation-for="Course.Image" class="text-danger"></span>
                        <img id="imagePreview" src="@Model.Course.Image" alt="Course Image" class="mt-2 w-full h-auto">
                    </div>
                    <div class="mb-4">
                        <label asp-for="Course.CourseName" class="block text-gray-700 font-medium mb-2">Course Name</label>
                        <input type="text" asp-for="Course.CourseName" class="w-full px-4 py-2 border rounded-lg" readonly>
                        <span asp-validation-for="Course.CourseName" class="text-danger"></span>
                    </div>
                    <div class="mb-4">
                        <label asp-for="Course.Description" class="block text-gray-700 font-medium mb-2">Description</label>
                        <textarea asp-for="Course.Description" class="w-full px-4 py-2 border rounded-lg" rows="4" readonly></textarea>
                        <span asp-validation-for="Course.Description" class="text-danger"></span>
                    </div>
                    <div class="mb-4 flex space-x-4">
                        <div class="w-1/2">
                            <label  asp-for="Course.CategoryId" class="block text-gray-700 font-medium mb-2">Category</label>
                            <select  asp-for="Course.CategoryId" asp-items="ViewBag.CategoryId" class="w-full px-4 py-2 border rounded-lg" disabled>
                            </select>
                        </div>
                        <div class="w-1/2">
                            <label asp-for="Course.Hours" class="block text-gray-700 font-medium mb-2">Hours</label>
                            <input asp-for="Course.Hours"  type="number" class="w-full px-4 py-2 border rounded-lg" readonly>
                            <span asp-validation-for="Course.Hours" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-4 flex space-x-4">
                        <div class="w-1/2">
                            <label asp-for="Course.DiscountPrice" class="block text-gray-700 font-medium mb-2">Discount Price</label>
                            <input asp-for="Course.DiscountPrice" type="text" class="w-full px-4 py-2 border rounded-lg" readonly>
                            <span asp-validation-for="Course.DiscountPrice" class="text-danger"></span>
                        </div>
                        <div class="w-1/2">
                            <label asp-for="Course.Price" class="block text-gray-700 font-medium mb-2">Price</label>
                            <input asp-for="Course.Price" type="text" class="w-full px-4 py-2 border rounded-lg" readonly>
                            <span asp-validation-for="Course.Price" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <label asp-for="Course.LinkVideo" class="block text-gray-700 font-medium mb-2">Course Video Link</label>
                        <input asp-for="Course.LinkVideo" type="text" class="w-full px-4 py-2 border rounded-lg" readonly>
                        <small class="block text-gray-600 mt-2">
                            Instructions for getting video link:<br>
                            b1: Select your video on YT<br>
                            b2: Select the "Share" button then select "Embed"<br>
                            b3: Copy the video link in src="https://www.youtube.com/embed/Ibjm2KHfymo?si=YciRL7dIPx0AOXPT"
                        </small>
                    </div>
                    <div class="mb-4 flex space-x-4">
                        <button type="button" id="editButton" class="px-4 py-2 bg-blue-500 text-white rounded-lg">Edit</button>
                        <button type="submit" id="saveButton" class="px-4 py-2 bg-green-500 text-white rounded-lg hidden">Save</button>
                        <button type="button" id="cancelButton" class="px-4 py-2 bg-gray-500 text-white rounded-lg hidden">Cancel</button>
                    </div>
                </form>
            </div>
        </main>


        <script>
            // Handle Edit button
            document.getElementById('editButton').addEventListener('click', function () {
                document.querySelectorAll('#courseForm input, #courseForm select, #courseForm textarea').forEach(element => {
                    element.removeAttribute('readonly');
                    if (element.tagName.toLowerCase() === 'input' && element.type === 'file') {
                        element.removeAttribute('disabled');
                    }
                    document.getElementById('saveButton').classList.remove('hidden');
                    document.getElementById('cancelButton').classList.remove('hidden');
                    this.classList.add('hidden');
                });
            });

            // Handle Save button
            document.getElementById('saveButton').addEventListener('click', function () {
                // Perform save operation here, e.g., sending data to server
                // Simulate success
                alert('Course information saved successfully!');
                resetForm();
            });

            // Handle Cancel button
            document.getElementById('cancelButton').addEventListener('click', function () {
                resetForm();
            });

            function resetForm() {
                document.querySelectorAll('#courseForm input, #courseForm select, #courseForm textarea').forEach(element => {
                    element.setAttribute('readonly', 'true');
                    if (element.tagName.toLowerCase() === 'input' && element.type === 'file') {
                        element.setAttribute('disabled', 'true');
                    }
                });
                document.getElementById('editButton').classList.remove('hidden');
                document.getElementById('saveButton').classList.add('hidden');
                document.getElementById('cancelButton').classList.add('hidden');
            }

            // Update status color based on selection
            function updateStatusColor() {
                const statusSelect = document.getElementById('status');
                const status = statusSelect.value;
                if (status === 'Active') {
                    statusSelect.classList.add('text-green-600');
                    statusSelect.classList.remove('text-red-600');
                } else {
                    statusSelect.classList.add('text-red-600');
                    statusSelect.classList.remove('text-green-600');
                }
            }

            // Handle image preview
            document.getElementById('courseImage').addEventListener('change', function () {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('imagePreview').src = e.target.result;
                };
                reader.readAsDataURL(this.files[0]);
            });

            // Initial status color update
            updateStatusColor();
        </script>


    </div>


</body>
</html>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
