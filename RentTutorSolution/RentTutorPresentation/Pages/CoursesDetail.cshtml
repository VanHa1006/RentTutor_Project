@page
@model RentTutorPresentation.Pages.CoursesDetailModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CoursesDetail</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
<div class="max-w-5xl mx-auto p-4">
    <div id="flash-sale-banner" class="bg-yellow-300 text-black text-center py-2 px-4 rounded-lg shadow-lg">
        <span> <b>Today only</b> | 24-Hour Flash Sale! Courses from $299.<b> Ends in <span id="countdown">1h 14m 14s</span>.</b></span>
    </div>
    <!-- Course Details Card -->
    <div class="bg-white shadow-lg rounded-lg p-6">
        <div class="flex justify-center mb-4">
            <iframe width="600" height="350" class="rounded-t-lg"
                    src="@Model.Course.LinkVideo"
                    title="YouTube video player"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    allowfullscreen>
            </iframe>
        </div>
        <div class="flex justify-between items-center mt-4">
            <h2 class="text-2xl font-bold">@Model.Course.CourseName</h2>
            <div>
                    <span class="text-2xl text-green-500 font-semibold">@(Model.Course.Price - Model.Course.DiscountPrice)</span>
                <del class="text-xl text-black-500 font-semibold">@Model.Course.Price</del>
            </div>
        </div>
        <div class="flex justify-between items-center mt-2">
            <div class="flex items-center">
                <svg class="w-5 h-5 text-yellow-400" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                    <path d="M12 17.27l6.18 3.73-1.64-7.19L21.82 9.5l-7.27-.61L12 2.99l-2.55 5.9-7.27.61 5.46 4.31-1.64 7.19L12 17.27z">
                    </path>
                </svg>
                <span class="ml-1 text-gray-600">4.5 (20 reviews)</span>
            </div>
            <span class="text-gray-600">Duration: @Model.Course.Hours hours</span>
        </div>
        <p class="mt-4 text-gray-700">
            @Model.Course.Description
        </p>
        <div class="flex justify-end mt-6 space-x-4">
                <a asp-page="/Student/AddToOrderNow" asp-route-id="@Model.Course.CourseId" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition">
                Order now
            </a>
                <a asp-page="/Student/AddToCart" asp-route-id="@Model.Course.CourseId">
            <button class="bg-indigo-500 text-white px-4 py-2 rounded-lg hover:bg-indigo-600 transition">
                Add to Cart
            </button>
            </a>
            <button class="bg-white-500 text-black px-4 py-2 rounded-lg transition">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-black-500 cursor-pointer heart-icon" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
                </svg>
            </button>
        </div>
    </div>
        <!-------------------------- Instructor Section ------------------------------------------------------->
        <div class="bg-white shadow-lg rounded-lg p-6 mt-8 flex items-center">
            <img src="~/img/Courses/ava.jpg" alt="Tutor Image" class="w-20 h-20 rounded-full">
            <div class="ml-4">
                <h3 class="text-xl font-semibold"> @Model.Course.Tutor.TutorNavigation.Username</h3>
                <p class="text-gray-600"> @Model.Course.Tutor.Specialization</p>
                <p class="text-gray-600">Number of Courses: 15 | Rating: 4.7</p>
            </div>
            <a href="#"
               class="ml-auto text-blue-500 hover:underline transition">View Tutor Details</a>
        </div>

        <!-- Reviews Tab -->
        <div class="bg-white shadow-lg rounded-lg p-6 mt-8">
            <h4 class="text-xl font-bold">Course reviews</h4>
            <div id="reviews-container" class="grid grid-cols-3 gap-4 mt-4">
                <!-- Review items will be dynamically inserted here -->
            </div>
            <button id="showMoreButton" class="bg-gray-300 text-gray-700 mt-4 px-4 py-2 rounded-lg hover:bg-gray-400 transition">
                Show More
            </button>
        </div>

        <script>
            // Fake review data
            const reviews = [
                {
                    id: 1,
                    image: '/img/avatardefault.png',
                    name: 'Jane Smith',
                    rating: 5.0,
                    comment: 'This course was amazing! It really helped me understand the basics of programming. The tutor explained everything clearly and was very helpful.',
                    time: '04/11/2024'
                },
                {
                    id: 2,
                    image: '/img/avatardefault.png',
                    name: 'John Doe',
                    rating: 4.8,
                    comment: 'Great course for beginners! The examples were very practical and easy to follow.',
                    time: '04/11/2024'
                },
                {
                    id: 3,
                    image: '/img/avatardefault.png',
                    name: 'Emily Davis',
                    rating: 4.7,
                    comment: 'I learned a lot from this course. The tutor was very knowledgeable.',
                    time: '04/11/2024'
                },
                {
                    id: 4,
                    image: '/img/avatardefault.png',
                    name: 'Michael Johnson',
                    rating: 4.9,
                    comment: 'Excellent course! Highly recommend to anyone starting out in programming.',
                    time: '04/11/2024'
                },
                {
                    id: 5,
                    image: '/img/avatardefault.png',
                    name: 'Chris Wilson',
                    rating: 5.0,
                    comment: 'The course content was very well structured. The tutor made complex topics easy to understand.',
                    time: '04/11/2024'
                }
            ];

            const reviewsContainer = document.getElementById('reviews-container');
            const showMoreButton = document.getElementById('showMoreButton');
            let displayedReviews = 3;

            // Function to create a review card
            function createReviewCard(review) {
                const reviewItem = document.createElement('div');
                reviewItem.className = 'flex items-start';
                reviewItem.innerHTML = `
                        <img src="${review.image}" alt="Student Image" class="w-10 h-10 rounded-full">
                        <div class="ml-4">
                            <h5 class="font-semibold">${review.name}</h5>
                            <div class="flex items-center">
                                <svg class="w-4 h-4 text-yellow-400" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <path d="M12 17.27l6.18 3.73-1.64-7.19L21.82 9.5l-7.27-.61L12 2.99l-2.55 5.9-7.27.61 5.46 4.31-1.64 7.19L12 17.27z"></path>
                                </svg>
                                <span class="ml-1">${review.rating}</span>
                            </div>
                            <p class="text-gray-700 mt-2">${review.comment}</p>
                            <span class="text-gray-500 text-sm">${review.time}</span>
                        </div>
                    `;
                return reviewItem;
            }

            // Function to load reviews
            function loadReviews() {
                reviewsContainer.innerHTML = '';
                const reviewsToShow = reviews.slice(0, displayedReviews);
                reviewsToShow.forEach(review => {
                    const reviewCard = createReviewCard(review);
                    reviewsContainer.appendChild(reviewCard);
                });

                // Hide the "Show More" button if all reviews are displayed
                if (displayedReviews >= reviews.length) {
                    showMoreButton.style.display = 'none';
                }
            }

            // Load initial reviews
            loadReviews();

            // Event listener for "Show More" button
            showMoreButton.addEventListener('click', () => {
                displayedReviews += 2;  // Increase the number of displayed reviews by 2 each time
                loadReviews();
            });

            // Handle heart icon click
            const heartIcon = card.querySelector('.heart-icon');
            heartIcon.addEventListener('click', () => {
                heartIcon.classList.toggle('text-red-500');
            });
        </script>

        <!-- Recommended Courses Section -->
        <div class="max-w-5xl mx-auto">
            <div class="bg-white shadow-lg rounded-lg p-6 mt-8">
                <h4 class="text-2xl font-bold text-center">Recommended Courses for You</h4>

                <div class="max-w-8xl mx-auto relative">
                    <div id="courses-carousel" class="overflow-x-scroll scrollbar-hide mb-4 relative px-0.5" style="overflow-y: hidden;">
                        <div id="courses-container" class="flex snap-x snap-mandatory gap-4" style="width: max-content;">
                            <!-- Course Cards -->
                        </div>
                    </div>

                 
                    <!-- Next Button -->
                    <button id="nextButton" type="button"
                            class="flex absolute top-1/2 right-3 z-40 items-center justify-center w-10 h-10 bg-gray-200/50 rounded-full hover:bg-gray-300 focus:outline-none transition">
                        <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                             xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <script>
            // Course data
            const courses = [
                {
                    id: 1,
                    image: '/img/Courses/java.jpg',
                    title: 'Advanced Python Programming',
                    instructor: 'Jane Doe',
                    rating: '4.8',
                    price: '$149.99',
                    link: '/CoursesDetail'
                },
                {
                    id: 2,
                    image: '/img/Courses/Nodejs.jpg',
                    title: 'Web Development Bootcamp',
                    instructor: 'John Smith',
                    rating: '4.7',
                    price: '$99.99',
                    link: '/CoursesDetail'
                },
                {
                    id: 3,
                    image: '/img/Courses/reactjs.jpg',
                    title: 'Data Science with Python',
                    instructor: 'Emily Davis',
                    rating: '4.9',
                    price: '$129.99',
                    link: '/CoursesDetail'
                },
                {
                    id: 4,
                    image: '/img/Courses/Javascript.jpg',
                    title: 'JavaScript Masterclass',
                    instructor: 'Michael Johnson',
                    rating: '4.6',
                    price: '$109.99',
                    link: '/CoursesDetail'
                },
                {
                    id: 5,
                    image: '/img/Courses/sptingspoot.jpg',
                    title: 'UI/UX Design Fundamentals',
                    instructor: 'Chris Wilson',
                    rating: '4.8',
                    price: '$89.99',
                    link: '/CoursesDetail'
                }
            ];

            // Function course card
            function createCourseCard(course) {
                const card = document.createElement('div');
                card.className = 'flex-none w-64 snap-center cursor-pointer';
                card.innerHTML = `
                    <div class="bg-gray-100 rounded-lg p-4">
                        <img src="${course.image}" alt="${course.title}" class="w-full h-32 object-cover rounded-lg">
                        <h5 class="mt-2 font-semibold truncate" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">${course.title}</h5>
                        <p class="text-gray-600">${course.instructor}</p>
                        <div class="flex items-center mt-2">
                            <svg class="w-4 h-4 text-yellow-400" fill="currentColor" xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24">
                                <path d="M12 17.27l6.18 3.73-1.64-7.19L21.82 9.5l-7.27-.61L12 2.99l-2.55 5.9-7.27.61 5.46 4.31-1.64 7.19L12 17.27z"></path>
                            </svg>
                            <span class="ml-1">${course.rating}</span>
                        </div>
                        <span class="text-green-500 font-semibold mt-2">${course.price}</span>
                    </div>
                `;
                card.addEventListener('click', () => {
                    window.location.href = course.link;
                });
                return card;
            }


            function initCoursesCarousel() {
                const coursesContainer = document.getElementById('courses-container');
                courses.forEach(course => {
                    coursesContainer.appendChild(createCourseCard(course));
                });

                const carousel = document.getElementById('courses-carousel');
                const prevButton = document.getElementById('prevButton');
                const nextButton = document.getElementById('nextButton');

                let scrollAmount = 300;

               

                nextButton.addEventListener('click', () => {
                    carousel.scrollBy({
                        left: scrollAmount,
                        behavior: 'smooth'
                    });
                });
            }

            // Initialize the carousel
            document.addEventListener('DOMContentLoaded', initCoursesCarousel);



            // Countdown Timer
            function startCountdown(duration, display) {
                let timer = duration, hours, minutes, seconds;
                const countdownInterval = setInterval(function () {
                    hours = Math.floor(timer / 3600);
                    minutes = Math.floor((timer % 3600) / 60);
                    seconds = Math.floor(timer % 60);

                    display.textContent = `${hours}h ${minutes}m ${seconds}s`;

                    if (--timer < 0) {
                        clearInterval(countdownInterval);
                        document.getElementById("flash-sale-banner").style.display = "none";
                    }
                }, 1000);
            }

            // Initialize countdown with 1h 14m 14s
            window.onload = function () {
                const countdownTime = 1 * 3600 + 14 * 60 + 14; // 1h 14m 14s in seconds
                const display = document.getElementById("countdown");
                startCountdown(countdownTime, display);
            };
        </script>

    </div>

    <script>
        function scrollNext() {
            const container = document.querySelector('.overflow-x-auto');
            container.scrollLeft += 300;
        }
    </script>
</body>
</html>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
