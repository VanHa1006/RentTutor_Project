@page
@model RentTutorPresentation.Pages.Student.My_learningModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Learning</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="bg-white w-full flex flex-col gap-5 px-3 md:px-16 lg:px-28 md:flex-row text-[#161931]">
        <aside class="hidden py-4 md:w-1/3 lg:w-1/4 md:block">
            <div class="sticky flex flex-col gap-2 p-4 text-sm border-r border-indigo-100 top-12">
                <h2 class="pl-3 mb-4 text-2xl font-semibold">Settings</h2>

                <a href="/Student/StudentProfile" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Public Profile
                </a>
                <a href="#" class="flex items-center px-3 py-2.5 font-bold bg-white text-indigo-900 border rounded-full">
                    My Learnning
                </a>
                <a href="/Student/Orders-history" class="flex items-center px-3 py-2.5 font-semibold hover:text-indigo-900 hover:border hover:rounded-full">
                    Orders History
                </a>
            </div>
        </aside>
        <main class="w-full min-h-screen py-1 md:w-2/3 lg:w-3/4">
            <div class="p-4 md:p-6">
                <div class="max-w-5xl mx-auto p-6 bg-gray-100 rounded-lg shadow-lg">
                    <h2 class="text-4xl font-extrabold mb-6 text-center text-indigo-600">My Learning</h2>
                    <div id="learning-container" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
                        <!-- Course Cards will be dynamically inserted here -->
                    </div>
                </div>


                <!-- Test Sort Status-->
                <form method="get" id="statusForm">
                    <select name="SortStatus" onchange="submitForm()" class="px-4 py-2 border rounded-md">
                        <option value="" selected="@(string.IsNullOrEmpty(Model.SortStatus))">Sort By</option>
                        <option value="Pending" selected="@(Model.SortStatus == "Pending")">Pending</option>
                        <option value="Studying" selected="@(Model.SortStatus == "Studying")">Studying</option>
                        <option value="Done" selected="@(Model.SortStatus == "Done")">Done</option>
                    </select>
                </form>
                <script>
                    function submitForm() {
                        document.getElementById("statusForm").submit();
                    }
                </script>
                <div id="learning-container" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
                    <!-- Course Cards will be dynamically inserted here -->
                </div>
            </div>

            @foreach (var item in Model.OrderDetail.Items)
            {
                <div class="course-card bg-white shadow-md rounded-xl duration-300 transform hover:scale-105 hover:shadow-2xl transition-all">
                    <a asp-page="../CoursesDetail" asp-route-id="@item.CourseId" class="block overflow-hidden rounded-t-xl">
                        <img src="@item.Course?.Image" class="h-60 w-full object-cover transition-transform duration-300 hover:scale-110" />
                    </a>
                    <div class="p-4">
                        <span class="text-gray-500 block mb-2 text-sm uppercase tracking-wider">Category: @item.Course?.Category?.CategoryName</span>
                        <h3 class="text-xl font-semibold text-gray-900 mb-2">@item.Course?.CourseName</h3>
                        <p class="text-lg font-semibold text-gray-700 mb-4">Tutor: @item.Course?.Tutor?.TutorNavigation?.FullName</p>
                        <div class="flex items-center justify-between mb-4">
                            <p class="text-lg font-bold text-gray-900">$@(item.Course?.Price - item.Course?.DiscountPrice)</p>
                            <p class="text-sm text-green-600 bg-green-100 px-3 py-1 rounded-full">@item.Status</p>
                        </div>
                        @if (item.Status == "Studying")
                        {
                            <form method="post" asp-page-handler="DoneCourse">
                                <input type="hidden" name="OrderId" value="@item.OrderDetailId" />
                                <button type="submit" class="w-full py-2 mt-2 bg-indigo-500 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-600 transition-all">
                                    Done
                                </button>
                            </form>
                        }
                        else if (item.Status == "Pending")
                        {
                            <form method="post" asp-page-handler="RefundMoney">
                                <input type="hidden" name="OrderDetailId" value="@item.OrderDetailId" />
                                <button type="submit" class="w-full py-2 mt-2 bg-indigo-500 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-600 transition-all">
                                    Refund Course
                                </button>
                            </form>
                        }
                    </div>
                </div>
            }

            <script>
                // Filter courses by status
                const filterByStatus = () => {
                    const selectedStatus = document.getElementById('statusFilter').value;
                    const courseCards = document.querySelectorAll('.course-card');

                    courseCards.forEach(card => {
                        const status = card.getAttribute('data-status').toLowerCase();
                        if (selectedStatus === 'all' || status === selectedStatus) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                };

                // Add event listener to the dropdown
                document.getElementById('statusFilter').addEventListener('change', filterByStatus);

                // Initialize learning display
                document.addEventListener('DOMContentLoaded', () => {
                    filterByStatus();
                    displayWishlist();
                });
            </script>

            </div>
        </main>

    </div>

</body>
</html>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

